@model ChangePasswordModel

<h4>Сменить пароль</h4>
<form action="@Url.Action("ChangePassword", "Profile")" method="post">
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @ViewBag.Message
        </div>
    }
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "sr-only" })
        <div class="input-group">
            <span class="input-group-addon">
                <i class="fa fa-unlock-alt"></i>
            </span>
            @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.OldPassword) })
        </div>
        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "sr-only" })
        <div class="input-group">
            <span class="input-group-addon">
                <i class="fa fa-lock"></i>
            </span>
            @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.NewPassword) })
        </div>
        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "sr-only" })
        <div class="input-group">
            <span class="input-group-addon">
                <i class="fa fa-lock"></i>
            </span>
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.ConfirmPassword) })
        </div>
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-default" autocomplete="off">Сменить</button>
    </div>
</form>