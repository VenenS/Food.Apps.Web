@using OrderModel = ITWebNet.Food.Site.Models.OrderViewModel
@model List<OrderModel>
@{
    bool isNested = ViewData["collapseScope"] != null;
    var banketOrder = ViewData["banketOrder"] != null;
    string panelHeading;
    string panelId;
    IEnumerable<OrderModel> data;

    if (isNested)
    {
        panelHeading = "Заказы сотрудников";
        panelId = string.Empty;
        data = banketOrder ? Model.Where(c => c.BanketId.HasValue) : Model.Where(c => c.CompanyOrderId.HasValue);
    }
    else
    {
        panelHeading = "Заказы физических лиц";
        panelId = "user-orders";
        data = Model.Where(item => !item.CompanyOrderId.HasValue);
    }
}

<div class="panel panel-default" @panelId>
    <div class="panel-heading">
        <b>
            @panelHeading
            @if (ViewData.ContainsKey("companyOrdersAddress"))
            {
                @ViewData["companyOrdersAddress"]
            }
        </b>
        @if (ViewData.ContainsKey("companyOrdersTotalSum"))
        {
            <div class="pull-right">
                @ViewData["companyOrdersTotalSum"] р.
            </div>
        }
    </div>
    <table class="table table-striped table-hover table-bordered" id="user-orders">
        <thead>
            <tr>
                <th>№ заказа</th>
                <th>Время поступления</th>
                @if (!data.Any(o => o.CompanyOrderId.HasValue))
                {
                    <th>Время доставки</th>
                }
                <th>Имя клиента</th>
                <th>Телефон</th>
                <th>Стоимость заказа</th>
                <th>Статус</th>
            </tr>
        </thead>
        @if (data != null)
        {
            @foreach (var item in data)
            {
                @await Html.PartialAsync("_UserReportsItem", item)
            }
        }
    </table>
</div>