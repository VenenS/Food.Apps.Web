@using OrderModel = ITWebNet.Food.Site.Models.OrderViewModel
@model List<OrderModel>
@{
    bool isNested = ViewData["collapseScope"] != null;
    var banketOrder = ViewData["banketOrder"] != null;
    string panelHeading;
    string panelId;
    List<OrderModel> data;

    if (isNested)
    {
        panelHeading = "Заказы сотрудников";
        panelId = string.Empty;
        data = banketOrder ? Model.Where(c => c.BanketId.HasValue).ToList() : Model.Where(c => c.CompanyOrderId.HasValue).ToList();
    }
    else
    {
        panelHeading = "Заказы физических лиц";
        panelId = "user-orders";
        data = Model.Where(item => !item.CompanyOrderId.HasValue).ToList();
    }
}

<div class="panel panel-default" @panelId>
    <div class="panel-heading">
        <b>
            @panelHeading
            @if (ViewData.ContainsKey("companyOrdersAddress"))
            {
                @ViewData["companyOrdersAddress"]
            }
        </b>
        @if (ViewData.ContainsKey("companyOrdersTotalSum"))
        {
            <div class="pull-right">
                @ViewData["companyOrdersTotalSum"] р.
            </div>
        }
    </div>
    <table class="table table-striped table-hover table-bordered table-head-center" id="user-orders">
        <thead>
            <tr>
                <th>№ заказа</th>
                <th>Время поступления</th>
                @if (!data.Any(o => o.CompanyOrderId.HasValue))
                {
                    <th>Время доставки</th>
                }
                <th>Имя клиента</th>
                <th>Телефон</th>
                <th>Стоимость заказа</th>
                <th>Доставка</th>
                <th>
                    @if (isNested)
                    {
                        var orderStatusEnums = new List<OrderStatusEnum>() { OrderStatusEnum.Abort, OrderStatusEnum.Accepted, OrderStatusEnum.Created, OrderStatusEnum.Delivered, OrderStatusEnum.Delivery };

                        <div class="dropdown">
                            <button class="btn btn-link btn-block dropdown-toggle" type="button" id="statuses-order-" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" title="Меняет статус у вложенных заказов">
                                Статус
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="statuses-order-">
                                @foreach (OrderStatusEnum status in orderStatusEnums)
                                {
                                    <li>
                                        <a onclick="ajaxChangeStatusOrdersInCompany(this,'@Url.Action("ChangeStatusOrdersInCompany" ,new { companyOrderId = ViewData["companyOrderId"], status = status })')" class="btn btn-link btn-block">@status.GetDescription()</a>
                                        @*@Ajax.ActionLink(status.GetDescription(), "ChangeStatusOrdersInCompany", new { status = status }, null, new {@class="btn btn-link btn-block" })*@
                                    </li>
                                }
                            </ul>
                            <div class="wip" id="process-">
                                <i class="fa fa-spinner fa-pulse fa-2x"></i>
                            </div>
                        </div>
                    }
                    else
                    {
                        @Html.Raw("Статус")
                    }
                </th>
            </tr>
        </thead>

        @await Html.PartialAsync("_ListUserReportsItem", data)

    </table>
</div>