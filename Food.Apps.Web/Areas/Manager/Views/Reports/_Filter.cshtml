@model ReportViewFilter
@{
    AjaxOptions options = new AjaxOptions
    {
        InsertionMode = InsertionMode.ReplaceWith,
        UpdateTargetId = "reports-page",
        HttpMethod = "POST",
        LoadingElementId = "processIcon",
        OnSuccess = "$('#result-message').addClass('hidden'); getDocumentHandler(); expandOrderItems(document);",
        OnComplete = "initDatePickers",
        OnFailure = "showAjaxFilterError();",
    };
    var cafeId = ViewContext.RouteData.Values["cafeId"] ??
                 ViewContext.RouteData.Values["id"];
}
<script type="text/javascript">
    // Функция обработки ошибки при применении фильтра заказов
    function showAjaxFilterError() {
        // Получение дат в виде набора строк, чтобы преобразовать их потом в дату JavaScript:
        var StartStrs = $('#FilterDateStart').val().split("-");
        var EndStrs = $('#FilterDateEnd').val().split("-");
        // Получение дат JavaScript:
        var dtStart;
        var dtEnd;
        if (StartStrs.length > 2)
            dtStart = new Date(StartStrs[0], StartStrs[1] - 1, StartStrs[2]);
        else
            dtStart = new Date();
        if (EndStrs.length > 2)
            dtEnd = new Date(EndStrs[0], EndStrs[1] - 1, EndStrs[2]);
        else
            dtEnd = new Date();
        // Элемент, куда надо выводить сообщение об ошибке:
        var msgSpan = $('#result-message');
        // Если дата начала переода больше даты окончания - сообщаем об этом. Если нет - значит, произошла какая-то другая ошибка, скорее всего при обращении к сервисам:
        if (dtStart > dtEnd)
            msgSpan.text('Дата начала периода не может быть больше даты окончания');
        msgSpan.removeClass('hidden');
    }
</script>
<form asp-action="Filter" asp-controller="Reports" asp-route-cafeId="@cafeId" method="post"
      id="form0"
      data-ajax="true"
      data-ajax-complete="initDatePickers();"
      data-ajax-failure="showAjaxFilterError();"
      data-ajax-loading="#processIcon"
      data-ajax-mode="replace-with"
      data-ajax-success="$('#result-message').addClass('hidden'); getDocumentHandler(); expandOrderItems(document);"
      data-ajax-update="#reports-page">
    @Html.HiddenFor(model => cafeId)
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row mb-3">
                <div class="col-xs-5">
                    <div class="input-group">
                        @Html.EditorFor(model => model.SearchQuery.SearchString, new {htmlAttributes = new {@class = "form-control", type = "search", placeholder = "Поиск"}})
                        <span class="input-group-addon">
                            <i class="fa fa-filter"></i>
                        </span>
                    </div>
                </div>
                <div class="col-xs-5">
                    <div class="input-daterange input-group ml-1" id="datepicker">
                        <input asp-for="Start" asp-format="{0:yyyy-MM-dd}" id="FilterDateStart" type="date" class="form-control" required />
                        <span class="input-group-addon">-</span>
                        <input asp-for="End" asp-format="{0:yyyy-MM-dd}" id="FilterDateEnd" type="date" class="form-control" required />
                    </div>
                    <span id="result-message" class="text-danger hidden">Ошибка при выполнении запроса к серверу</span>
                </div>
                <div class="col-xs-2"><input type="submit" value="Выбрать" class="btn btn-default form-control ml-1"></div>
            </div>
            <div class="row">
                <div class="col-xs-3">
                    <span><strong>Поиск по:</strong></span>
                    <div class="radio">
                        <label class="food-radio">
                            @Html.RadioButtonFor(model => model.SearchQuery.Type, SearchType.SearchByName)
                            <span class="food-radio-text">@SearchType.SearchByName.GetDescription()</span>
                        </label>
                    </div>
                    <div class="radio">
                        <label class="food-radio">
                            @Html.RadioButtonFor(model => model.SearchQuery.Type, SearchType.SearchByPhone)
                            <span class="food-radio-text">@SearchType.SearchByPhone.GetDescription()</span>
                        </label>
                    </div>
                    <div class="radio">
                        <label class="food-radio">
                            @Html.RadioButtonFor(model => model.SearchQuery.Type, SearchType.SearchByOrderNumber)
                            <span class="food-radio-text">@SearchType.SearchByOrderNumber.GetDescription()</span>
                        </label>
                    </div>
                    <div class="radio">
                        <label class="food-radio">
                            @Html.RadioButtonFor(model => model.SearchQuery.Type, SearchType.SearchByDish)
                            <span class="food-radio-text">@SearchType.SearchByDish.GetDescription()</span>
                        </label>
                    </div>
                </div>
                <div class="col-xs-3">
                    <span><strong>Тип заказа</strong></span>
                    <div class="col-xs-12">
                        <div class="checkbox">
                            <label class="food-checkbox">
                                <input type="checkbox" name="@Html.NameFor(model => model.IsCustomer)" value="true" checked="@Model.IsCustomer"/>
                                <span class="food-checkbox-text">@Html.DisplayNameFor(model => model.IsCustomer)</span>
                            </label>
                        </div>
                        <div class="checkbox">
                            <label class="food-checkbox">
                                <input type="checkbox" name="@Html.NameFor(model => model.IsCompany)" value="true" checked="@Model.IsCompany"/>
                                <span class="food-checkbox-text">@Html.DisplayNameFor(model => model.IsCompany)</span>
                            </label>
                        </div>
                        <div class="checkbox">
                            <label class="food-checkbox">
                                <input type="checkbox" name="@Html.NameFor(model => model.IsBanket)" value="true" checked="@Model.IsBanket"/>
                                <span class="food-checkbox-text">@Html.DisplayNameFor(model => model.IsBanket)</span>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-xs-3">
                    <div class="row">
                        <span><strong>Сортировка</strong></span>
                        <div class="col-xs-12">
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.SortType, SortType.OrderByDeliveryDate)
                                    <span class="food-radio-text">@SortType.OrderByDeliveryDate.GetDescription()</span>
                                </label>
                            </div>
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.SortType, SortType.OrderByDate)
                                    <span class="food-radio-text">@SortType.OrderByDate.GetDescription()</span>
                                </label>
                            </div>
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.SortType, SortType.OrderByStatus)
                                    <span class="food-radio-text">@SortType.OrderByStatus.GetDescription()</span>
                                </label>
                            </div>
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.SortType, SortType.OrderByPrice)
                                    <span class="food-radio-text">@SortType.OrderByPrice.GetDescription()</span>
                                </label>
                            </div>
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.SortType, SortType.OrderByOrderNumber)
                                    <span class="food-radio-text">@SortType.OrderByOrderNumber.GetDescription()</span>
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <span><strong>Упорядочить</strong></span>
                        <div class="col-xs-12">
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.ResultOrder, ResultOrdering.Ascending)
                                    <span class="food-radio-text">@ResultOrdering.Ascending.GetDescription()</span>
                                </label>
                            </div>
                            <div class="radio">
                                <label class="food-radio">
                                    @Html.RadioButtonFor(model => model.ResultOrder, ResultOrdering.Descending)
                                    <span class="food-radio-text">@ResultOrdering.Descending.GetDescription()</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xs-3">
                    <span><strong>Статус</strong></span>
                    <div class="col-xs-12">
                        @foreach (OrderStatusEnum item in Model.AvailableStatuses)
                        {
                            <div class="checkbox">
                                <label class="food-checkbox">
                                    <input type="checkbox" name="@Html.NameFor(model => model.Statuses)" value="@item" checked="@(Model.Statuses?.Contains(item) ?? false)" />
                                    <span class="food-checkbox-text">@item.GetDescription().Replace("Заказ ", string.Empty)</span>
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-3">
                    @Html.DropDownListFor( model => model.ReportTypeId, 
                        new SelectList(Model.ReportTypes, "Id", "Name"), 
                        new { @class = "form-control" })
                </div>
                <div class="col-xs-3">
                    <a target="_blank" class="document-type btn btn-link" 
                       href="@Url.RouteUrl("ManagerCafe", 
                                 new {cafeId, controller = "Reports", 
                                     action = "Documents", 
                                     reportExtension = ReportExtension.HTML})">
                        <i class="fa fa-print"></i>
                    </a>
                    <a class="document-type btn btn-link" 
                       href="@Url.RouteUrl("ManagerCafe",
                                 new {cafeId, controller = "Reports", 
                                     action = "Documents", 
                                     reportExtension = ReportExtension.XLS})">
                        <i class="fa fa-file-excel-o"></i>
                    </a>
                    <a class="document-type btn btn-link " 
                       href="@Url.RouteUrl("ManagerCafe", 
                                 new {cafeId, controller = "Reports", 
                                     action = "Documents", 
                                     reportExtension = ReportExtension.PDF})">
                        <i class="fa fa-file-pdf-o"></i>
                    </a>
                </div>
            </div>
            <div class="wip" id="processIcon">
                <i class="fa fa-spinner fa-2_5x fa-pulse"></i>
            </div>
        </div>
    </div>
</form>