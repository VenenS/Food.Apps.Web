@model OrderModel
@{
    string scopeId;

    if (ViewData["collapseScope"] != null)
    {
        scopeId = ViewData["collapseScope"].ToString();
    }
    else
    {
        scopeId = "#user-orders";
    }

    string userName = Model.Creator.UserFullName ?? Model.Creator.Email;
    string dataTarget = scopeId + " #order-positions-" + Model.Id;
}
<tbody class="selectable filterable" id="order-@Model.Id" data-order-id="@Model.Id">
    <tr class="selectable-item filterable-item" data-item-id="@Model.Id" data-name="UserOrders">
        <td>@Model.Id</td>
        <td>@Model.Create</td>
        <td class="wrap-word-td">@userName</td>
        <td>@Html.Phone(Model.PhoneNumber)</td>
        <td>
            @(Math.Max(Model.TotalSum.Value-Model.OrderInfo.DeliverySumm, 0)) <span class="text-muted"> ₽</span>
        </td>
        <td class="cancel-select">
            @Model.Status
        </td>
        <td>
            <a class="collapsed" data-load="true" role="button" data-toggle="collapse" data-target="@dataTarget" >
                <i class="fa fa-expander"></i>
            </a>
        </td>
    </tr>
    <tr class="collapse" id="order-positions-@Model.Id">
        @await Html.PartialAsync("_OrderItems", Model)
    </tr>
</tbody>
